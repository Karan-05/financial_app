name: Deploy to AWS ECS

on:
  push:
    branches:
      - main  # Change to your default branch if different

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to AWS ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: ${{ secrets.AWS_ECR_REGISTRY }}
          region: ${{ secrets.AWS_REGION }}

      # Build, tag, and push Docker image to ECR
      - name: Build, tag, and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # Update ECS service with the new image
      - name: Update ECS Service
        uses: aws-actions/amazon-ecs-update-service@v1
        with:
          cluster: ${{ secrets.AWS_ECS_CLUSTER }}
          service: ${{ secrets.AWS_ECS_SERVICE }}
          task-definition: ${{ secrets.AWS_ECS_SERVICE }}-task-def
          container-name: financial_app_container
          image: ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}
          region: ${{ secrets.AWS_REGION }}
