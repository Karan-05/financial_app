name: Deploy to EC2

on:
  push:
    branches:
      - main  # Change this to your desired branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true
          registry-type: private
          skip-logout: false
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}

      # Step 3: Build, Tag, and Push Docker Image
      - name: Build, Tag, and Push Docker Image
        id: build-image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t financial-app:$IMAGE_TAG .
          docker tag financial-app:$IMAGE_TAG $ECR_REGISTRY:$IMAGE_TAG
          docker push $ECR_REGISTRY:$IMAGE_TAG

      # Step 4: Update EC2 with Latest Image
      - name: Update EC2 with Latest Image
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Decode and set up SSH key
            echo "${{ secrets.EC2_SSH_KEY }}" | base64 --decode > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa

            # Optional: Install AWS CLI on EC2 if not already installed
            # sudo apt-get update
            # sudo apt-get install -y awscli

            # Log in to ECR from EC2
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

            # Pull the latest Docker image
            docker pull ${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}

            # Update docker-compose.yml with the new image tag
            sed -i "s|image: financial-app:.*|image: ${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}|" docker-compose.yml

            # Restart Docker containers
            docker-compose down
            docker-compose up -d --build
