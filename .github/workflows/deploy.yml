name: Deploy to EC2

on:
  push:
    branches:
      - main  # Change to your desired branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Step 4: Build, Tag, and Push Docker Image
      - name: Build, Tag, and Push Docker Image
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building Docker image..."
          docker build -t financial_app:${IMAGE_TAG} .
          echo "Tagging Docker image..."
          docker build -t financial_app:${IMAGE_TAG} .
          docker tag financial_app:${IMAGE_TAG} 051826698008.dkr.ecr.us-east-1.amazonaws.com/financial_app:${IMAGE_TAG}
          docker push 051826698008.dkr.ecr.us-east-1.amazonaws.com/financial_app:${IMAGE_TAG}

      # Step 5: Update EC2 with Latest Image using SSM
      - name: Update EC2 with Latest Image using SSM
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          GITHUB_SHA: ${{ github.sha }}
          EC2_INSTANCE_ID: ${{ secrets.EC2_INSTANCE_ID }}
        run: |
          echo "Creating SSM command parameters..."
          cat > parameters.json << EOF
          {
            "commands": [
              "aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REPOSITORY}",
              "docker pull ${ECR_REPOSITORY}:${GITHUB_SHA}",
              "sed -i 's|image: financial-app:.*|image: ${ECR_REPOSITORY}:${GITHUB_SHA}|' docker-compose.yml",
              "docker-compose down",
              "docker-compose up -d --build"
            ]
          }
          EOF
          echo "Sending command to EC2 instance via SSM..."
          aws ssm send-command \
            --instance-ids "${EC2_INSTANCE_ID}" \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy latest Docker image" \
            --parameters file://parameters.json \
            --timeout-seconds 600 \
            --region "${AWS_REGION}"
